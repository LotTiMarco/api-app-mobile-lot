const fs = require('fs');
const path = require('path');
const mkdirp = require('mkdirp');
const imageToBase64 = require('image-to-base64');
const converToImage= require('convert-base64-to-image');



async function saveBase64ToFile(imageUrl, filePath) {
    try {
        // Obtener la cadena base64 de la imagen
        const base64String = await imageToBase64(imageUrl);

        // Asegurarse de que el directorio exista
        const directoryPath = path.dirname(filePath);
        mkdirp.sync(directoryPath);

        // Escribir la cadena base64 en un archivo .txt
        fs.writeFileSync(filePath, base64String);

        console.log('Cadena base64 guardada en:', filePath);
    } catch (error) {
        console.error('Error al procesar la imagen:', error);
    }
}

// Ejemplo de uso
const imageUrl = 'https://www.lotinternacional.com/cms/_imgs/sistema/1//favicon.jpg';
const outputFile = 'base64_output.txt';

//saveBase64ToFile(imageUrl, outputFile);

//====================================================================================================


const base64 = 'data:image/jpeg;base64,' + '';
const pathToSaveImage = './image.png'
// try {
//     converToImage.converBase64ToImage(base64, pathToSaveImage);
//     console.log('Image saved successfully');
// } catch (error) {
//     console.log(error);
// }


//====================================================================================================
function decodeBase64Image(base64str, fileName) {
    const matches = base64str.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/);

    if (!matches || matches.length !== 3) {
        throw new Error('String en formato base64 inválido');
    }

    const fileExtension = matches[1].split('/')[1]; console.log(fileExtension);

    const expectedLength = Math.floor(matches[2].length * 3 / 4);

    if (matches[2].length % 4 !== 0) {
        throw new Error('Longitud de cadena base64 no válida');
    }

    const buffer = Buffer.from(matches[2], 'base64');

    if (buffer.length !== expectedLength) {
        throw new Error('Longitud de cadena base64 incorrecta');
    }

    if (!buffer || buffer.length === 0) {
        throw new Error('Error al decodificar la imagen en base64');
    }

    const storeFileName = fileName + '.' + fileExtension;

    // Puedes guardar el buffer como archivo si es necesario
    fs.writeFileSync(storeFileName, buffer);

    return {
        name: storeFileName,
        type: fileExtension,
        data: buffer,
    };
}

// Ejemplo de uso
const base64String = base64;
const fileName = 'imagen_decodificada';

try {
    const decodedImage = decodeBase64Image(base64String, fileName);
    console.log('Imagen decodificada con éxito:', decodedImage);
} catch (error) {
    console.error('Error al decodificar la imagen:', error.message);
}




